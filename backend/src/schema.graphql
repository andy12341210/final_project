type Query {
    Room(name: String!): Room!
}

type Room {
    isFull: Boolean
    playerAmount: Int
    currentDice: Int
    currentPlayer: Int
    players: [Player!]
}

type Player {
    _id: String!
    name: String!
    isPrepared: Boolean!
    money : Int!
    position: Int!
}

type EventMessage {
    join: [Int!]
    message: String!
}

type ReactionMessage {
    join: [Int!]
    message: String!
    money: Int!
}

type NewPlayer {
    _id:ID!
    name:String!
}

type Mutation {
    joinRoom(_id:ID!,name:String!): Room!
    createPlayer( name:String!): NewPlayer!
}

type Subscription {
    eventHappened: EventMessage!
    playerUpdate: Player!
    playerReaction: ReactionMessage!
}